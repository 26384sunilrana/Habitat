// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Habitat.Website.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class PageImageFeature : Xunit.IClassFixture<PageImageFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Page Image.feature"
#line hidden
        
        public PageImageFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Page Image", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(PageImageFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Page Image")]
        [Xunit.TraitAttribute("Description", "Page Image_UC1_Make sure Page Image control available for PH col-narrow in Experi" +
            "ence Editor")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void PageImage_UC1_MakeSurePageImageControlAvailableForPHCol_NarrowInExperienceEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Page Image_UC1_Make sure Page Image control available for PH col-narrow in Experi" +
                    "ence Editor", new string[] {
                        "NeedImplementation"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("Experience Editor application is launched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.And("/Modules/Foundation/Sitecore-Extensions page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When("User selects col-narrow-1 placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.And("User clicks <Add here> button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.And("User selects <PageImage> rendering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("user clicks Select button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.Then("PageImage control inserted on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Page Image")]
        [Xunit.TraitAttribute("Description", "Page Image_UC2_Make sure Page Image control available for PH col-wide in Experien" +
            "ce Editor")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void PageImage_UC2_MakeSurePageImageControlAvailableForPHCol_WideInExperienceEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Page Image_UC2_Make sure Page Image control available for PH col-wide in Experien" +
                    "ce Editor", new string[] {
                        "NeedImplementation"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("Experience Editor application is launched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.And("/Modules/Feature/Person page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.When("User selects col-wide-1 placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("User clicks <Add here> button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("User selects <PageImage> rendering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("user clicks Select button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then("PageImage control inserted on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Page Image")]
        [Xunit.TraitAttribute("Description", "Page Image_UC3_Verify PageImage control present in all Wide and Narrow columns")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void PageImage_UC3_VerifyPageImageControlPresentInAllWideAndNarrowColumns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Page Image_UC3_Verify PageImage control present in all Wide and Narrow columns", new string[] {
                        "NeedImplementation"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("User is logged to Sitecore as Admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("User selects Content Editor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Column name"});
            table1.AddRow(new string[] {
                        "col-narrow-1"});
            table1.AddRow(new string[] {
                        "col-narrow-2"});
            table1.AddRow(new string[] {
                        "col-narrow-3"});
            table1.AddRow(new string[] {
                        "col-narrow-4"});
            table1.AddRow(new string[] {
                        "col-narrow-5"});
            table1.AddRow(new string[] {
                        "col-narrow-6"});
            table1.AddRow(new string[] {
                        "col-wide-1"});
            table1.AddRow(new string[] {
                        "col-wide-2"});
            table1.AddRow(new string[] {
                        "col-wide-3"});
#line 27
 testRunner.Then("PageImage control presents in all Wide and Narrow columns", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Page Image")]
        [Xunit.TraitAttribute("Description", "Page Image_UC4_Make sure picture can be changed in control")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void PageImage_UC4_MakeSurePictureCanBeChangedInControl()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Page Image_UC4_Make sure picture can be changed in control", new string[] {
                        "NeedImplementation"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("Experience Editor application is launched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("/Modules/Feature/Person page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("PageImage rendering is inserted into col-wide-1 placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.When("User clicks <Edit related item> command", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.And("User sets </Default Website/cover> value into Image field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("User saves changes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("changes applied on the /Modules/Feature/Person page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Page Image")]
        [Xunit.TraitAttribute("Description", "Page Image_UC5_Remove PageImage control")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void PageImage_UC5_RemovePageImageControl()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Page Image_UC5_Remove PageImage control", new string[] {
                        "NeedImplementation"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given("Experience Editor application is launched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.And("/Modules/Feature/Person page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("PageImage rendering is inserted into col-wide-1 placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("User selects <PageImage> rendering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("User clicks <Remove> button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("User saves changes on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.Then("PageImage control is no longer present on the /Modules/Feature/Person page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                PageImageFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                PageImageFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
